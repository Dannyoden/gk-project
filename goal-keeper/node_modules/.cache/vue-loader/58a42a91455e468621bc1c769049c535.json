{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/wizard/utils/TeamPicker.vue?vue&type=style&index=0&id=28b6ad4d&scoped=true&lang=scss&","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/wizard/utils/TeamPicker.vue","mtime":1627847928289},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojdGVhbS1waWNrZXItd3JhcHBlciB7CiAgICBtYXgtd2lkdGg6IDUwMHB4OwogICAgd2lkdGg6IDEwMCU7Cn0KCi5jb250YWluZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtd3JhcDogd3JhcDsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cgo="},{"version":3,"sources":["TeamPicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TeamPicker.vue","sourceRoot":"src/components/wizard/utils","sourcesContent":["<template>\n    <div id=\"team-picker-wrapper\" class=\"container\">\n        <select-player\n            v-for=\"player in players\"\n            :key=\"player.player.id\"\n            :player=\"player\"\n            @change-select-player=\"assignTeamOrRemoveTeamOfPlayer\">\n        </select-player>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Vue} from 'vue-property-decorator';\nimport SelectPlayer from '@/components/wizard/utils/SelectPlayer.vue';\nimport {namespace} from 'vuex-class';\nimport type {SessionWizardPlayer} from '@/data/interface/SessionWizardPlayer';\nimport {SessionTeam} from '@/data/enum/SessionTeam';\n\nconst SessionWizardModuleInstance = namespace('SessionWizardModule');\n\n@Component({\n    components:\n        { SelectPlayer }\n})\nexport default class TeamPicker extends Vue {\n\n    @SessionWizardModuleInstance.State('step')\n    currentStep!: number;\n\n    @SessionWizardModuleInstance.State('previousStep')\n    previousStep!: number;\n\n    @SessionWizardModuleInstance.Getter('sessionWizardTeam')\n    sessionWizardTeam!: SessionWizardPlayer[];\n\n    created() {\n        if (this.currentStep === 2) {\n            this.$toasted.global.selectSessionTeamPlayers({\n                message: 'first team'\n            })\n            return;\n        }\n\n        if (this.currentStep === 3) {\n            this.$toasted.global.selectSessionTeamPlayers({\n                message: 'second team'\n            })\n            return;\n        }\n\n        if (this.previousStep > this.currentStep) {\n            return;\n        }\n    }\n\n    get players() {\n        return this.currentStep === 2 ? this.viewSelectFirstTeam() : this.viewSelectSecondTeam();\n    }\n\n    viewSelectFirstTeam(): SessionWizardPlayer[] {\n        const secondTeam = this.sessionWizardTeam.filter(sessionWizardPlayer => sessionWizardPlayer.team === SessionTeam.SECOND)\n            .sort((first: SessionWizardPlayer, second: SessionWizardPlayer) => (first.player.givenName!.localeCompare(second.player.givenName!)));\n        const otherPlayers = this.sessionWizardTeam.filter(sessionWizardPlayer => sessionWizardPlayer.team !== SessionTeam.SECOND)\n            .sort((first: SessionWizardPlayer, second: SessionWizardPlayer) => (first.player.givenName!.localeCompare(second.player.givenName!)));\n        return [...otherPlayers, ...secondTeam];\n    }\n\n    viewSelectSecondTeam(): SessionWizardPlayer[] {\n        const firstTeam = this.sessionWizardTeam.filter(sessionWizardPlayer => sessionWizardPlayer.team === SessionTeam.FIRST)\n            .sort((first: SessionWizardPlayer, second: SessionWizardPlayer) => (first.player.givenName!.localeCompare(second.player.givenName!)));\n        const otherPlayers = this.sessionWizardTeam.filter(sessionWizardPlayer => sessionWizardPlayer.team !== SessionTeam.FIRST)\n            .sort((first: SessionWizardPlayer, second: SessionWizardPlayer) => (first.player.givenName!.localeCompare(second.player.givenName!)));\n        return [...otherPlayers, ...firstTeam];\n    }\n\n    assignTeamOrRemoveTeamOfPlayer(player: SessionWizardPlayer): void {\n        if (player.team !== SessionTeam.NOT_SELECTED) {\n            this.$store.commit('SessionWizardModule/setTeamOfPlayer', { playerArg: player, sessionTeamValue: SessionTeam.NOT_SELECTED });\n            return;\n        }\n        this.currentStep === 2 ? this.assignFirstTeamToPlayer(player) : this.assignSecondTeamToPlayer(player);\n    }\n\n    assignFirstTeamToPlayer(player: SessionWizardPlayer): void {\n        this.$store.commit('SessionWizardModule/setTeamOfPlayer', { playerArg: player, sessionTeamValue: SessionTeam.FIRST });\n    }\n\n    assignSecondTeamToPlayer(player: SessionWizardPlayer): void {\n        this.$store.commit('SessionWizardModule/setTeamOfPlayer', { playerArg: player, sessionTeamValue: SessionTeam.SECOND });\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n#team-picker-wrapper {\n    max-width: 500px;\n    width: 100%;\n}\n\n.container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\n</style>"]}]}