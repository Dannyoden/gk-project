{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/accessmanagement/UpdatePassword.vue?vue&type=style&index=0&id=652f06ac&scoped=true&lang=scss&","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/accessmanagement/UpdatePassword.vue","mtime":1620157880782},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW50ZXJhY3RpdmUtYmcgewogIGhlaWdodDogMTAwdmg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMjsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDI0cHggNHB4IDY0cHggLTI0cHggcmdiYSg3MSw3MSw3MSwxKTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDI0cHggNHB4IDY0cHggLTI0cHggcmdiYSg3MSw3MSw3MSwxKTsKICBib3gtc2hhZG93OiBpbnNldCAyNHB4IDRweCA2NHB4IC0yNHB4IHJnYmEoNzEsNzEsNzEsMSk7CiAgcGFkZGluZzogMDsKfQpAbWVkaWEgKG1heC13aWR0aDogNzY5cHgpIHsKICAuaW50ZXJhY3RpdmUtYmd7CiAgICBkaXNwbGF5OiBub25lCiAgfQp9CgouY29sdW1uc3sKICBtYXJnaW46IDA7Cn0KCiNsb2dvIHsKICBtYXJnaW4tYm90dG9tOiAzMHB4Owp9CgojcGFzc3dvcmQtaW5wdXQgewogIG1hcmdpbi1ib3R0b206IDQwcHg7Cn0KCi5zdWJ0aXRsZSB7CiAgY29sb3I6ICNmZmZmZmY7CiAgZm9udC1zaXplOiAxcmVtOwogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgbGluZS1oZWlnaHQ6IDEuMjU7Cn0K"},{"version":3,"sources":["UpdatePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"UpdatePassword.vue","sourceRoot":"src/components/accessmanagement","sourcesContent":["<template>\n  <div class=\"columns is-vcentered\">\n    <div class=\"login column is-4 \">\n      <section class=\"section\">\n        <div class=\"4\">\n          <div class=\"has-text-centered\">\n            <img id=\"logo\" src=\"../../assets/images/logo_goalkeeper_white.png\" width=\"250\"  alt=\"\">\n          </div>\n        </div>\n        <div v-if=\"!invalidToken && !passwordUpdated\">\n          <p v-if=\"!passwordIsValid\" class=\"help is-danger\">Please enter a new password</p>\n          <p v-if=\"!passwordConfirmIsValid\" class=\"help is-danger\">Please make sure both passwords match</p>\n          <InputField class-name=\"input is-primary\" type=\"password\" @inputChanged=\"setPassword\" place-holder=\"Please enter your new password\" :input-value=\"password\"></InputField>\n          <InputField id=\"password-input\" class-name=\"input is-primary\" type=\"password\" @inputChanged=\"setPasswordConfirm\" place-holder=\"Confirm password\" :input-value=\"passwordConfirm\"></InputField>\n          <div class=\"has-text-centered\">\n            <Button class-name=\"button is-centered is-primary is-outlined\"\n                    text=\"Update password\"\n                    @clicked=\"handlePasswordReset\"/>\n          </div>\n        </div>\n        <div v-if=\"invalidToken || passwordUpdated\">\n          <h2 v-if=\"invalidToken\" class=\"subtitle has-text-centered\">Invalid reset token. Your password reset token is either invalid or expired. Please try resetting the password again</h2>\n          <h2 v-if=\"passwordUpdated\" class=\"subtitle has-text-centered\">Your password has been updated</h2>\n          <div class=\"has-text-centered\">\n            <Button class-name=\"button is-centered is-primary is-outlined no-background\"\n                    text=\"Go to login\"\n                    @clicked=\"navigateToLogin\"/>\n          </div>\n        </div>\n      </section>\n    </div>\n    <div id=\"particles-js\" class=\"interactive-bg column is-8\">\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport Button from \"@/components/common/Button.vue\";\nimport InputField from \"@/components/common/InputField.vue\";\nimport AuthBackend from \"@/backend/AuthBackend\";\n\n@Component({\n  components: {\n    InputField,\n    Button\n  }\n})\nexport default class UpdatePassword extends Vue {\n\n  private invalidToken: boolean = false;\n  private passwordIsValid: boolean = true;\n  private passwordUpdated: boolean = false;\n  private passwordConfirmIsValid: boolean = true;\n  private password: string = \"\";\n  private passwordConfirm: string = \"\";\n  private token = \"\";\n\n  mounted() {\n    this.token = this.$route.query.token as string;\n    if (this.token.length > 0) {\n      AuthBackend.validatePasswordToken(this.token)\n      .then(() => {\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.invalidToken = true;\n        }\n      });\n    } else {\n      this.invalidToken = true;\n    }\n  }\n\n  private navigateToLogin() {\n    this.$router.push(\"/login\");\n  }\n\n  private setPassword(password: string) {\n    this.password = password;\n  }\n\n  private setPasswordConfirm(password: string) {\n    this.passwordConfirm = password;\n  }\n\n  handlePasswordReset() {\n    this.passwordIsValid = this.password.length > 0;\n    this.passwordConfirmIsValid = this.password === this.passwordConfirm;\n    if (this.passwordIsValid && this.passwordConfirmIsValid) {\n      AuthBackend.savePassword(this.password, this.token).then(() => {\n        this.passwordUpdated = true;\n      }).catch(error => {\n        if (error.response.status === 400) {\n          console.log('error')\n        }\n      });\n    }\n  }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.interactive-bg {\n  height: 100vh;\n  background-color: #00d1b2;\n  -webkit-box-shadow: inset 24px 4px 64px -24px rgba(71,71,71,1);\n  -moz-box-shadow: inset 24px 4px 64px -24px rgba(71,71,71,1);\n  box-shadow: inset 24px 4px 64px -24px rgba(71,71,71,1);\n  padding: 0;\n}\n@media (max-width: 769px) {\n  .interactive-bg{\n    display: none\n  }\n}\n\n.columns{\n  margin: 0;\n}\n\n#logo {\n  margin-bottom: 30px;\n}\n\n#password-input {\n  margin-bottom: 40px;\n}\n\n.subtitle {\n  color: #ffffff;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.25;\n}\n</style>\n"]}]}