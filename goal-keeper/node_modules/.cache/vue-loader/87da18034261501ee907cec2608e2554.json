{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/sessions/SessionOverview.vue?vue&type=style&index=0&id=3cc4e3a6&scoped=true&lang=scss&","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/sessions/SessionOverview.vue","mtime":1618424618835},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYm9keSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIGZsZXgtYmFzaXM6IDEwMCU7Cn0KCi5jb2x1bW5zIHsKICBtYXJnaW4tdG9wOiAzMHB4Owp9CgouZml4ZWQtYnV0dG9uIHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIGFsaWduLXNlbGY6IGNlbnRlcjsKICAgIGJvdHRvbTogNnZoOwogICAgei1pbmRleDogMTsKfQoK"},{"version":3,"sources":["SessionOverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SessionOverview.vue","sourceRoot":"src/components/sessions","sourcesContent":["<template>\n    <div class=\"body\">\n      <HeroBanner label=\"Training sessions\"/>\n      <PlaceHolder\n          v-if=\"showPlaceholder\"\n          icon=\"fas fa-arrow-down\"\n          :text=\"placeholderText\"/>\n            <div class=\"columns is-multiline is-mobile\">\n                <Session\n                    v-for=\"session in sessionOverview\"\n                    :key=\"session.id\"\n                    :session=\"session\">\n                </Session>\n            </div>\n            <div class=\"fixed-button\">\n                <Button :icon-data=\"{icon: 'fas fa-plus', position: 'left'}\"\n                        class-name=\"button is-centered is-primary\"\n                        text=\"New Session\"\n                        @clicked=\"createNewSession\"/>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Vue, Watch} from 'vue-property-decorator';\nimport Session from '@/components/sessions/Session.vue';\nimport SessionDto from '@/data/dto/SessionDto';\nimport SessionBackend from '@/backend/SessionBackend';\nimport { namespace } from 'vuex-class';\nimport Routes from '@/router/Routes';\nimport HeroBanner from \"@/components/common/HeroBanner.vue\";\nimport Button from '@/components/common/Button.vue';\nimport PlaceHolder from \"@/components/common/PlaceHolder.vue\";\n\nconst SessionModule = namespace('SessionModule');\n\n@Component({\n    components: {\n      PlaceHolder,\n        Session,\n        HeroBanner,\n        Button\n    }\n})\nexport default class SessionOverview extends Vue {\n\n    @SessionModule.Getter('sessionOverview')\n    getSessionOverview!: SessionDto[];\n\n    sessionsFetched = false;\n    placeholder = false;\n    placeholderText = 'You haven\\'t added any sessions yet. You can do so by clicking the button below';\n\n    created() {\n        try {\n            this.getSessions();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    @Watch('sessionsFetched')\n    sessionRetrieved(): void {\n        if (!this.sessionsFetched) {\n            return;\n        }\n        this.$emit('showNewSessionPopUp', true);\n    }\n\n    getSessions() {\n      let loader = this.initLoader();\n        let sessions: SessionDto[] = [];\n        SessionBackend.retrieveSessions().subscribe(\n            (sessionCollection: SessionDto[]) => {\n                sessionCollection.forEach(sessionDto => {\n                    sessions.push(sessionDto);\n                });\n            }, (error: any) => {\n                console.error(error);\n                loader.hide();\n                return;\n            }, () => {\n                this.sessionsFetched = true;\n                this.$store.commit('SessionModule/setSessionsInSessionOverview', sessions);\n                loader.hide();\n            }\n        );\n    }\n\n    get showPlaceholder() {\n        return this.placeholder && this.sessionsFetched;\n    }\n\n    get sessionOverview() {\n        const overview = this.getSessionOverview;\n\n        if (!overview || overview.length === 0) {\n            this.placeholder = true;\n            return;\n        }\n        this.placeholder = false;\n        return overview.sort((first: SessionDto, second: SessionDto) => (first.start!.getTime() - second.start!.getTime()));\n    }\n\n    createNewSession() {\n        this.$router.push({\n            name: Routes.SessionWizard\n        });\n    }\n\n    initLoader() {\n      return this.$loading.show({\n        opacity: 0.2,\n        color: '#50ffe5',\n        backgroundColor: '#ffffff',\n        width: 40,\n        canCancel: true\n      });\n    }\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n\n.body {\n    display: flex;\n    flex-direction: column;\n    flex-basis: 100%;\n}\n\n.columns {\n  margin-top: 30px;\n}\n\n.fixed-button {\n    position: fixed;\n    align-self: center;\n    bottom: 6vh;\n    z-index: 1;\n}\n\n</style>\n"]}]}