{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/wizard/utils/SessionDetails.vue?vue&type=style&index=0&id=0263554e&scoped=true&lang=scss&","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/wizard/utils/SessionDetails.vue","mtime":1618400372968},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oYXMtdGV4dC13ZWlnaHQtYm9sZCB7CiAgY29sb3I6IHdoaXRlc21va2U7Cn0KCg=="},{"version":3,"sources":["SessionDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA","file":"SessionDetails.vue","sourceRoot":"src/components/wizard/utils","sourcesContent":["<template>\n    <div>\n        <input-field\n            class-name=\"input is-primary\"\n            type=\"text\"\n            label=\"Name\"\n            place-holder=\"Choose a session name\"\n            :input-value=\"name\"\n            @inputChanged=\"setName\"></input-field>\n        <input-field\n            class-name=\"input is-primary\"\n            type=\"number\"\n            label=\"Duration\"\n            place-holder=\"Duration is in minutes\"\n            :input-value=\"minutes\"\n            @inputChanged=\"setMinutes\"></input-field>\n        <date-picker :date=\"date\" @dateChanged=\"setDate\"/>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Vue} from 'vue-property-decorator';\nimport DatePicker from '@/components/wizard/utils/DatePicker.vue';\nimport InputField from '@/components/common/InputField.vue';\nimport {namespace} from 'vuex-class';\n\nconst SessionWizardModuleInstance = namespace('SessionWizardModule');\n\n@Component({\n    components: {\n        InputField,\n        DatePicker\n    }\n})\nexport default class SessionDetails extends Vue {\n\n    @SessionWizardModuleInstance.State('step')\n    currentStep!: number;\n\n    @SessionWizardModuleInstance.State('previousStep')\n    previousStep!: number;\n\n    @SessionWizardModuleInstance.State('name')\n    sessionName: string | undefined;\n\n    @SessionWizardModuleInstance.State('duration')\n    sessionDuration: number | undefined;\n\n    @SessionWizardModuleInstance.State('date')\n    sessionDate: Date | undefined;\n\n    created() {\n        if (this.previousStep > this.currentStep) {\n            return;\n        }\n    }\n\n    get name() {\n        return this.sessionName ? this.sessionName : '';\n    }\n\n    get minutes() {\n        return this.sessionDuration ? this.sessionDuration : '';\n    }\n\n    get date() {\n        return this.sessionDate ? this.sessionDate : undefined;\n    }\n\n    private setName(name: string) {\n        this.$store.commit('SessionWizardModule/setSessionName', name);\n    }\n\n    private setMinutes(minutesArg: string) {\n        const minutes = Number.parseInt(minutesArg);\n        if (isNaN(minutes)) {\n            console.error('Input is not a number');\n            return;\n        }\n        this.$store.commit('SessionWizardModule/setSessionDuration', minutes);\n    }\n\n    private setDate(date: Date) {\n        this.$store.commit('SessionWizardModule/setSessionDate', date);\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.has-text-weight-bold {\n  color: whitesmoke;\n}\n\n</style>\n"]}]}