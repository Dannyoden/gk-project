{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/dashboard/main/DashboardMain.vue?vue&type=style&index=0&id=ab5333bc&scoped=true&lang=scss&","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/components/dashboard/main/DashboardMain.vue","mtime":1618072227631},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2Utd3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGhlaWdodDogMTAwdmg7Cn0K"},{"version":3,"sources":["DashboardMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA","file":"DashboardMain.vue","sourceRoot":"src/components/dashboard/main","sourcesContent":["<template>\n  <div class=\"page-wrapper\">\n    <nav-bar/>\n    <HeroBanner label=\"Dashboard\"/>\n    <div class=\"columns\">\n      <SideMenu/>\n      <div class=\"column\">\n        <SummaryPanel v-if=\"teamSummaryData.summaryData\" :team-summary-data=\"teamSummaryData\"/>\n        <LineChartPanel v-if=\"chartData.datasets\" :chart-data=\"chartData\"/>\n        <Table/>\n      </div>\n    </div>\n    <Footer/>\n  </div>\n</template>\n<script lang=\"ts\">\n\nimport {Vue} from \"vue-property-decorator\";\nimport Component from \"vue-class-component\";\nimport NavBar from \"@/components/navigation/NavBar.vue\";\nimport HeroBanner from \"@/components/common/HeroBanner.vue\";\nimport SideMenu from \"@/components/navigation/DropdownMenu.vue\";\nimport Table from \"@/components/dashboard/main/components/Table.vue\";\nimport DashboardBackend from \"@/backend/DashboardBackend\";\nimport PlayerDataDto from \"@/data/dto/PlayerDataDto\";\nimport Footer from \"@/components/navigation/Footer.vue\";\nimport SummaryPanel from \"@/components/dashboard/main/components/SummaryPanel.vue\"\nimport LineChartPanel from \"@/components/dashboard/main/components/LineChartPanel.vue\";\nimport TeamSummaryDataDto from \"@/data/dto/TeamSummaryDataDto\";\n\nconst NOT_VALUES = ['totalSessions', 'avgSessions', 'sessionsPlanned'];\n\n\n@Component({\n  components: {\n    HeroBanner,\n    NavBar,\n    SideMenu,\n    Table,\n    Footer,\n    SummaryPanel,\n    LineChartPanel\n  }\n})\nexport default class DashboardMain extends Vue {\n\n  teamSummaryData: TeamSummaryDataDto = new TeamSummaryDataDto();\n  chartData = {};\n\n  created() {\n   this.retrieveTeamOverview();\n   this.retrieveSummary()\n  }\n\n  retrieveTeamOverview(){\n    let playerDataDtos: PlayerDataDto[] = [];\n    DashboardBackend.retrieveTeamOverviewData()\n        .subscribe(\n            (playerDataCollection: PlayerDataDto[]) => {\n              playerDataCollection.forEach(playerData => {\n                playerDataDtos.push(playerData);\n              });\n            }, (error: any) => {\n              console.error(error);\n              return;\n            }, () => {\n              this.$store.commit('DashboardModule/setClubTeamOverview', playerDataDtos);\n            }\n        );\n  }\n\n  retrieveSummary() {\n    DashboardBackend.retrieveSummaryData()\n        .subscribe(teamSummaryData => {\n          this.teamSummaryData = teamSummaryData;\n          if(teamSummaryData) {\n            this.chartData = this.getChartData(teamSummaryData);\n          }\n        });\n  }\n\n  getChartData(teamSummaryData: TeamSummaryDataDto) {\n    return {\n      labels: ['3 weeks ago', '3 weeks ago', '2 weeks ago', 'Last 7 days'],\n      datasets: [ {\n        label: 'Sessions per week',\n        borderColor: '#50ffe5',\n        fill: false,\n        data: teamSummaryData.summaryData!.filter(s => !NOT_VALUES.includes(s.label!)).map(s => s.value)\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n\n.page-wrapper {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n</style>\n"]}]}