{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js??ref--14-2!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/AuthHeader.ts","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/AuthHeader.ts","mtime":1605507513031},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXV0aEhlYWRlcigpIHsKICB2YXIgc3RvcmVkVXNlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJyk7CiAgdmFyIHVzZXIgPSBKU09OLnBhcnNlKHN0b3JlZFVzZXIgPyBzdG9yZWRVc2VyIDogIiIpOwoKICBpZiAodXNlciAmJiB1c2VyLmFjY2Vzc1Rva2VuKSB7CiAgICByZXR1cm4gJ0JlYXJlciAnICsgdXNlci5hY2Nlc3NUb2tlbjsKICB9IGVsc2UgewogICAgcmV0dXJuICcnOwogIH0KfQ=="},{"version":3,"sources":["/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/AuthHeader.ts"],"names":[],"mappings":"AAAA,eAAc,SAAU,UAAV,GAAoB;AAC9B,MAAM,UAAU,GAAG,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAnB;AACA,MAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,UAAH,GAAgB,EAArC,CAAX;;AAEA,MAAI,IAAI,IAAI,IAAI,CAAC,WAAjB,EAA8B;AAC1B,WAAO,YAAY,IAAI,CAAC,WAAxB;AACH,GAFD,MAEO;AACH,WAAO,EAAP;AACH;AACJ","sourcesContent":["export default function authHeader() {\n    const storedUser = localStorage.getItem('user');\n    let user = JSON.parse(storedUser ? storedUser : \"\");\n\n    if (user && user.accessToken) {\n        return 'Bearer ' + user.accessToken ;\n    } else {\n        return '';\n    }\n}\n"],"sourceRoot":""}]}