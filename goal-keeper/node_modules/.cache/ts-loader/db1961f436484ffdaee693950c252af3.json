{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/thread-loader/dist/cjs.js!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js??ref--14-3!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/SessionBackend.ts","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/SessionBackend.ts","mtime":1613580630992},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGFubnkvZnVsbHN0YWNrLXByb2plY3RzL2dvYWwta2VlcGVyLXByb2plY3QvZ29hbC1rZWVwZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZGFubnkvZnVsbHN0YWNrLXByb2plY3RzL2dvYWwta2VlcGVyLXByb2plY3QvZ29hbC1rZWVwZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZnJvbSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBjYXRjaEVycm9yLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCBTZXNzaW9uU2VyaWFsaXplciBmcm9tICdAL3NlcmlhbGl6ZXIvU2Vzc2lvblNlcmlhbGl6ZXInOwppbXBvcnQgYXV0aEhlYWRlciBmcm9tICcuL0F1dGhIZWFkZXInOwoKdmFyIFNlc3Npb25CYWNrZW5kID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTZXNzaW9uQmFja2VuZCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXNzaW9uQmFja2VuZCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2Vzc2lvbkJhY2tlbmQsIG51bGwsIFt7CiAgICBrZXk6ICJyZXRyaWV2ZVNlc3Npb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXRyaWV2ZVNlc3Npb25zKCkgewogICAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sCiAgICAgICAgICBfcmVmJGFwaSA9IF9yZWYuYXBpLAogICAgICAgICAgYXBpID0gX3JlZiRhcGkgPT09IHZvaWQgMCA/IEF4aW9zIDogX3JlZiRhcGk7CgogICAgICB2YXIgc2VyaWFsaXplciA9IG5ldyBTZXNzaW9uU2VyaWFsaXplcigpOwogICAgICByZXR1cm4gZnJvbShhcGkuZ2V0KFNlc3Npb25CYWNrZW5kLlNFU1NJT05TX0VORFBPSU5ULCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICBBdXRob3JpemF0aW9uOiBhdXRoSGVhZGVyKCkKICAgICAgICB9CiAgICAgIH0pKS5waXBlKG1hcChmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSA9PT0gbnVsbCkgewogICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgIH0KCiAgICAgICAgdmFyIHNlc3Npb25zID0gW107CgogICAgICAgIGZvciAodmFyIGRhdGEgaW4gcmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgdmFyIHNlc3Npb24gPSBzZXJpYWxpemVyLmRlc2VyaWFsaXplKHJlc3BvbnNlLmRhdGFbZGF0YV0pOwogICAgICAgICAgc2Vzc2lvbnMucHVzaChzZXNzaW9uKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBzZXNzaW9uczsKICAgICAgfSwgY2F0Y2hFcnJvcihmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgfSkpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZXRyaWV2ZVNlc3Npb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJldHJpZXZlU2Vzc2lvbihpZCkgewogICAgICB2YXIgX3JlZjIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgICAgX3JlZjIkYXBpID0gX3JlZjIuYXBpLAogICAgICAgICAgYXBpID0gX3JlZjIkYXBpID09PSB2b2lkIDAgPyBBeGlvcyA6IF9yZWYyJGFwaTsKCiAgICAgIHZhciBVUkkgPSBTZXNzaW9uQmFja2VuZC5TRVNTSU9OU19FTkRQT0lOVCArIFNlc3Npb25CYWNrZW5kLklEX1BBVEggKyAnLycgKyBpZDsKICAgICAgdmFyIFVSTCA9IGVuY29kZVVSSShVUkkpOwogICAgICB2YXIgc2VyaWFsaXplciA9IG5ldyBTZXNzaW9uU2VyaWFsaXplcigpOwogICAgICByZXR1cm4gZnJvbShhcGkuZ2V0KFVSTCwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgQXV0aG9yaXphdGlvbjogYXV0aEhlYWRlcigpCiAgICAgICAgfQogICAgICB9KSkucGlwZShtYXAoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZXIuZGVzZXJpYWxpemUocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0sIGNhdGNoRXJyb3IoZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlU2Vzc2lvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlU2Vzc2lvbihuZXdTZXNzaW9uKSB7CiAgICAgIHZhciBfcmVmMyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sCiAgICAgICAgICBfcmVmMyRhcGkgPSBfcmVmMy5hcGksCiAgICAgICAgICBhcGkgPSBfcmVmMyRhcGkgPT09IHZvaWQgMCA/IEF4aW9zIDogX3JlZjMkYXBpOwoKICAgICAgcmV0dXJuIGZyb20oYXBpLnBvc3QoU2Vzc2lvbkJhY2tlbmQuU0VTU0lPTlNfRU5EUE9JTlQsIG5ldyBTZXNzaW9uU2VyaWFsaXplcigpLnNlcmlhbGl6ZShuZXdTZXNzaW9uKSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgQXV0aG9yaXphdGlvbjogYXV0aEhlYWRlcigpCiAgICAgICAgfQogICAgICB9KSkucGlwZShtYXAoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICB9LCBjYXRjaEVycm9yKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHRocm93IGVycm9yOwogICAgICB9KSkpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZVNlc3Npb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbikgewogICAgICB2YXIgX3JlZjQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgICAgX3JlZjQkYXBpID0gX3JlZjQuYXBpLAogICAgICAgICAgYXBpID0gX3JlZjQkYXBpID09PSB2b2lkIDAgPyBBeGlvcyA6IF9yZWY0JGFwaTsKCiAgICAgIHZhciBVUkkgPSBTZXNzaW9uQmFja2VuZC5TRVNTSU9OU19FTkRQT0lOVCArIFNlc3Npb25CYWNrZW5kLklEX1BBVEggKyAnLycgKyBzZXNzaW9uLmlkOwogICAgICB2YXIgVVJMID0gZW5jb2RlVVJJKFVSSSk7CiAgICAgIHJldHVybiBmcm9tKGFwaS5wdXQoVVJMLCBuZXcgU2Vzc2lvblNlcmlhbGl6ZXIoKS5zZXJpYWxpemUoc2Vzc2lvbiksIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgIEF1dGhvcml6YXRpb246IGF1dGhIZWFkZXIoKQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTZXNzaW9uQmFja2VuZDsKfSgpOwoKZXhwb3J0IHsgU2Vzc2lvbkJhY2tlbmQgYXMgZGVmYXVsdCB9OwpTZXNzaW9uQmFja2VuZC5TRVNTSU9OU19FTkRQT0lOVCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9VUkwgKyAnL2FwaS9zZXNzaW9ucyc7ClNlc3Npb25CYWNrZW5kLklEX1BBVEggPSAnL2lkJzs="},{"version":3,"sources":["/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/SessionBackend.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios, {AxiosError, AxiosResponse} from 'axios';\nimport { from, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport SessionDto from '@/data/dto/SessionDto';\nimport SessionSerializer from '@/serializer/SessionSerializer';\nimport authHeader from './AuthHeader';\n\nexport default class SessionBackend {\n\n    private static SESSIONS_ENDPOINT = process.env.VUE_APP_BASE_URL + '/api/sessions';\n    private static ID_PATH = '/id';\n\n    public static retrieveSessions( { api = Axios } = {}): Observable<SessionDto[]> {\n        const serializer = new SessionSerializer();\n\n        return from(\n            api.get(\n                SessionBackend.SESSIONS_ENDPOINT,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: authHeader()\n                    }\n                })\n            ).pipe(\n                map((response: AxiosResponse) => {\n                    if(response.data === null) {\n                        return [];\n                    }\n                    let sessions: SessionDto[] = [];\n                    for(let data in response.data){\n                        const session = serializer.deserialize(response.data[data]);\n                        sessions.push(session);\n                    }\n                    return sessions;\n                },\n                catchError((error: AxiosError) => {\n                    throw error;\n                })\n            )\n        );\n    }\n\n    public static retrieveSession(id: string, { api = Axios} = {}): Observable<SessionDto> {\n        const URI = SessionBackend.SESSIONS_ENDPOINT + SessionBackend.ID_PATH + '/' + id;\n        const URL = encodeURI(URI);\n\n        const serializer = new SessionSerializer();\n        return from(\n            api.get(\n                URL,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: authHeader()\n                    }\n                })\n            ).pipe(\n                map((response: AxiosResponse) => {\n                    return serializer.deserialize(response.data);\n                },\n                catchError((error: AxiosError) => {\n                    throw error;\n                })\n            )\n        )\n    }\n\n    public static createSession(newSession: SessionDto, { api = Axios } = {} ): Observable<AxiosResponse> {\n        return from(\n            api.post(\n                SessionBackend.SESSIONS_ENDPOINT,\n                new SessionSerializer().serialize(newSession),\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: authHeader()\n                    }\n                })\n            ).pipe(\n                map((response: AxiosResponse) => {\n                    return response;\n                }, catchError((error: AxiosError) => {\n                    throw error;\n                })\n            )\n        );\n    }\n\n    public static updateSession(session: SessionDto, { api = Axios } = {} ): Observable<AxiosResponse> {\n        const URI = SessionBackend.SESSIONS_ENDPOINT + SessionBackend.ID_PATH + '/' + session.id;\n        const URL = encodeURI(URI);\n\n        return from(\n            api.put(\n                URL,\n                new SessionSerializer().serialize(session),\n                    {\n                        headers: {\n                            Accept: 'application/json',\n                            Authorization: authHeader()\n                        }\n                    })\n                .catch((error: AxiosError) => {\n                    throw error;\n                }\n            )\n        );\n    }\n}\n"],"sourceRoot":""}]}