{"remainingRequest":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js??ref--14-2!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/ClubTeamBackend.ts","dependencies":[{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/ClubTeamBackend.ts","mtime":1611848670367},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGFubnkvZnVsbHN0YWNrLXByb2plY3RzL2dvYWwta2VlcGVyLXByb2plY3QvZ29hbC1rZWVwZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZGFubnkvZnVsbHN0YWNrLXByb2plY3RzL2dvYWwta2VlcGVyLXByb2plY3QvZ29hbC1rZWVwZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZnJvbSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBjYXRjaEVycm9yLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCBDbHViVGVhbVNlcmlhbGl6ZXIgZnJvbSAnQC9zZXJpYWxpemVyL0NsdWJUZWFtU2VyaWFsaXplcic7CmltcG9ydCBhdXRoSGVhZGVyIGZyb20gIkAvYmFja2VuZC9BdXRoSGVhZGVyIjsKCnZhciBDbHViVGVhbUJhY2tlbmQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIENsdWJUZWFtQmFja2VuZCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDbHViVGVhbUJhY2tlbmQpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENsdWJUZWFtQmFja2VuZCwgbnVsbCwgW3sKICAgIGtleTogInJldHJpZXZlVGVhbSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmV0cmlldmVUZWFtKCkgewogICAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sCiAgICAgICAgICBfcmVmJGFwaSA9IF9yZWYuYXBpLAogICAgICAgICAgYXBpID0gX3JlZiRhcGkgPT09IHZvaWQgMCA/IEF4aW9zIDogX3JlZiRhcGk7CgogICAgICB2YXIgc2VyaWFsaXplciA9IG5ldyBDbHViVGVhbVNlcmlhbGl6ZXIoKTsKICAgICAgcmV0dXJuIGZyb20oYXBpLmdldChDbHViVGVhbUJhY2tlbmQuQ0xVQl9URUFNX0VORFBPSU5ULCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICBBdXRob3JpemF0aW9uOiBhdXRoSGVhZGVyKCkKICAgICAgICB9CiAgICAgIH0pKS5waXBlKG1hcChmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgcmVzcG9uc2VEYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICByZXR1cm4gc2VyaWFsaXplci5kZXNlcmlhbGl6ZShyZXNwb25zZURhdGEpOwogICAgICB9LCBjYXRjaEVycm9yKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHRocm93IGVycm9yOwogICAgICB9KSkpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZUNsdWJUZWFtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDbHViVGVhbShjbHViVGVhbSkgewogICAgICB2YXIgX3JlZjIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgICAgX3JlZjIkYXBpID0gX3JlZjIuYXBpLAogICAgICAgICAgYXBpID0gX3JlZjIkYXBpID09PSB2b2lkIDAgPyBBeGlvcyA6IF9yZWYyJGFwaTsKCiAgICAgIHZhciBVUkkgPSBDbHViVGVhbUJhY2tlbmQuQ0xVQl9URUFNX0VORFBPSU5UOwogICAgICByZXR1cm4gZnJvbShhcGkucHV0KFVSSSwgY2x1YlRlYW0sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgIEF1dGhvcml6YXRpb246IGF1dGhIZWFkZXIoKQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVDbHViVGVhbSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlQ2x1YlRlYW0oY2x1YlRlYW0pIHsKICAgICAgdmFyIF9yZWYzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSwKICAgICAgICAgIF9yZWYzJGFwaSA9IF9yZWYzLmFwaSwKICAgICAgICAgIGFwaSA9IF9yZWYzJGFwaSA9PT0gdm9pZCAwID8gQXhpb3MgOiBfcmVmMyRhcGk7CgogICAgICB2YXIgVVJJID0gQ2x1YlRlYW1CYWNrZW5kLkNMVUJfVEVBTV9FTkRQT0lOVDsKICAgICAgcmV0dXJuIGZyb20oYXBpLnBvc3QoVVJJLCBjbHViVGVhbSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgQXV0aG9yaXphdGlvbjogYXV0aEhlYWRlcigpCiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgfSkpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIENsdWJUZWFtQmFja2VuZDsKfSgpOwoKZXhwb3J0IHsgQ2x1YlRlYW1CYWNrZW5kIGFzIGRlZmF1bHQgfTsKQ2x1YlRlYW1CYWNrZW5kLkNMVUJfVEVBTV9FTkRQT0lOVCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9VUkwgKyAnL2FwaS90ZWFtJzs="},{"version":3,"sources":["/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/node_modules/eslint-loader/index.js??ref--13-0!/Users/danny/fullstack-projects/goal-keeper-project/goal-keeper/src/backend/ClubTeamBackend.ts"],"names":[],"mappings":";;AAAA,OAAO,KAAP,MAA+C,OAA/C;AACA,SAAQ,IAAR,QAAgC,MAAhC;AACA,SAAQ,UAAR,EAAoB,GAApB,QAA8B,gBAA9B;AACA,OAAO,kBAAP,MAA+B,iCAA/B;AAEA,OAAO,UAAP,MAAuB,sBAAvB;;IAEqB,e;;;;;;;WAGV,wBAAwC;AAAA,qFAAF,EAAE;AAAA,0BAAlB,GAAkB;AAAA,UAAlB,GAAkB,yBAAZ,KAAY;;AAC3C,UAAM,UAAU,GAAG,IAAI,kBAAJ,EAAnB;AACA,aAAO,IAAI,CACP,GAAG,CAAC,GAAJ,CACI,eAAe,CAAC,kBADpB,EAEI;AACI,QAAA,OAAO,EAAE;AAAG,UAAA,MAAM,EAAE,kBAAX;AACG,UAAA,aAAa,EAAE,UAAU;AAD5B;AADb,OAFJ,CADO,CAAJ,CAOD,IAPC,CAQC,GAAG,CAAC,UAAC,QAAD,EAA4B;AAC5B,YAAM,YAAY,GAAG,QAAQ,CAAC,IAA9B;AACA,eAAO,UAAU,CAAC,WAAX,CAAuB,YAAvB,CAAP;AACH,OAHE,EAIH,UAAU,CAAC,UAAC,KAAD,EAAsB;AAC7B,cAAM,KAAN;AACH,OAFS,CAJP,CARJ,CAAP;AAiBH;;;WAEM,wBAAsB,QAAtB,EAAiE;AAAA,sFAAF,EAAE;AAAA,4BAAlB,GAAkB;AAAA,UAAlB,GAAkB,0BAAZ,KAAY;;AACpE,UAAM,GAAG,GAAG,eAAe,CAAC,kBAA5B;AACA,aAAO,IAAI,CACP,GAAG,CAAC,GAAJ,CACI,GADJ,EAEI,QAFJ,EAGI;AACI,QAAA,OAAO,EAAE;AACL,UAAA,MAAM,EAAE,kBADH;AAEL,UAAA,aAAa,EAAE,UAAU;AAFpB;AADb,OAHJ,EASK,KATL,CASW,UAAC,KAAD,EAAsB;AACrB,cAAM,KAAN;AACH,OAXT,CADO,CAAX;AAeH;;;WAEM,wBAAsB,QAAtB,EAAiE;AAAA,sFAAF,EAAE;AAAA,4BAAlB,GAAkB;AAAA,UAAlB,GAAkB,0BAAZ,KAAY;;AACpE,UAAM,GAAG,GAAG,eAAe,CAAC,kBAA5B;AACA,aAAO,IAAI,CACP,GAAG,CAAC,IAAJ,CACI,GADJ,EAEI,QAFJ,EAGI;AACI,QAAA,OAAO,EAAE;AACL,UAAA,MAAM,EAAE,kBADH;AAEL,UAAA,aAAa,EAAE,UAAU;AAFpB;AADb,OAHJ,EASK,KATL,CASW,UAAC,KAAD,EAAsB;AACrB,cAAM,KAAN;AACH,OAXT,CADO,CAAX;AAeH;;;;;;SA5DgB,e;AACF,eAAA,CAAA,kBAAA,GAAsB,OAAO,CAAC,GAAR,CAAY,gBAAZ,GAA+B,WAArD","sourcesContent":["import Axios, {AxiosError, AxiosResponse} from 'axios';\nimport {from, Observable } from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport ClubTeamSerializer from '@/serializer/ClubTeamSerializer';\nimport ClubTeamDto from \"@/data/dto/ClubTeamDto\";\nimport authHeader from \"@/backend/AuthHeader\";\n\nexport default class ClubTeamBackend {\n    private static CLUB_TEAM_ENDPOINT =  process.env.VUE_APP_BASE_URL + '/api/team';\n\n    public static retrieveTeam({ api = Axios } = {} ): Observable<ClubTeamDto> {\n        const serializer = new ClubTeamSerializer();\n        return from(\n            api.get(\n                ClubTeamBackend.CLUB_TEAM_ENDPOINT,\n                {\n                    headers: {  Accept: 'application/json',\n                                Authorization: authHeader() }\n                })\n            ).pipe(\n                map((response: AxiosResponse) => {\n                    const responseData = response.data;\n                    return serializer.deserialize(responseData);\n                },\n                catchError((error: AxiosError) => {\n                    throw error;\n                })\n            )\n        );\n    }\n\n    public static updateClubTeam(clubTeam: ClubTeamDto, { api = Axios } = {} ): Observable<AxiosResponse> {\n        const URI = ClubTeamBackend.CLUB_TEAM_ENDPOINT;\n        return from(\n            api.put(\n                URI,\n                clubTeam,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: authHeader()\n                    }\n                })\n                .catch((error: AxiosError) => {\n                        throw error;\n                    }\n                )\n        );\n    }\n\n    public static createClubTeam(clubTeam: ClubTeamDto, { api = Axios } = {} ): Observable<AxiosResponse> {\n        const URI = ClubTeamBackend.CLUB_TEAM_ENDPOINT;\n        return from(\n            api.post(\n                URI,\n                clubTeam,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: authHeader()\n                    }\n                })\n                .catch((error: AxiosError) => {\n                        throw error;\n                    }\n                )\n        );\n    }\n}\n"],"sourceRoot":""}]}